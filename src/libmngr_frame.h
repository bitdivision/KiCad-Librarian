/*
 *  Librarian for KiCad, a free EDA CAD application.
 *  This file contains the code for the main frame, which is almost all of the
 *  user-interface code.
 *
 *  Copyright (C) 2013-2014 CompuPhase
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not
 *  use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 *  License for the specific language governing permissions and limitations
 *  under the License.
 *
 *  $Id: libmngr_frame.h 5030 2014-02-10 08:33:24Z thiadmer $
 */
#ifndef __libmngr_frame__
#define __libmngr_frame__

/**
@file
Subclass of libmngr_frame_base, which is generated by wxFormBuilder.
*/

#include "libmngr_gui_base.h"
#include "libraryfunctions.h"
#include "cxffont.h"
#include <wx/timer.h>

/** Implementing libmngr_frame_base */
class libmngrFrame : public AppFrame
{
public:
		/** Constructor */
		libmngrFrame( wxWindow* parent );
	//// end generated class members

protected:
	void OnCloseApp( wxCloseEvent& event );
	void OnNewLibrary( wxCommandEvent& event );
	void OnNewFootprint( wxCommandEvent& event );
	void OnNewSymbol( wxCommandEvent& event );
	void OnFootprintReport( wxCommandEvent& event );
	void OnSymbolReport( wxCommandEvent& event );
	void OnQuit( wxCommandEvent& event );
	void OnFootprintMode( wxCommandEvent& event );
	void OnSymbolMode( wxCommandEvent& event );
	void OnSearchPaths( wxCommandEvent& event );
	void OnRemoteLink( wxCommandEvent& event );
	void OnReportSettings( wxCommandEvent& event );
	void OnUIOptions( wxCommandEvent& event );
	void OnTemplateOptions( wxCommandEvent& event );
	void OnCompareMode( wxCommandEvent& event );
	void OnDetailsPanel( wxCommandEvent& event );
	void OnHelp( wxCommandEvent& event );
	void OnAbout( wxCommandEvent& event );
	void OnMovePart( wxCommandEvent& event );
	void OnCopyPart( wxCommandEvent& event );
	void OnDeletePart( wxCommandEvent& event );
	void OnRenamePart( wxCommandEvent& event );
	void OnDuplicatePart( wxCommandEvent& event );
	void OnLeftLibSelect( wxCommandEvent& event );
	void OnRightLibSelect( wxCommandEvent& event );
	void OnLeftModSelect( wxListEvent& event );
	void OnRightModSelect( wxListEvent& event );
	void OnZoomIn( wxCommandEvent& event );
	void OnZoomOut( wxCommandEvent& event );
	void OnShowMeasurements( wxCommandEvent& event );
	void OnShowDetails( wxCommandEvent& event );
	void OnShowLabels( wxCommandEvent& event );
	void OnShowLeftFootprint( wxCommandEvent& event );
	void OnShowRightFootprint( wxCommandEvent& event );
	void OnShowLeftDetails( wxCommandEvent& event );
	void OnShowRightDetails( wxCommandEvent& event );
	void OnDetailsPanelUnsplit( wxSplitterEvent& event );
	void OnViewStartDrag( wxMouseEvent& event );
	void OnViewDrag( wxMouseEvent& event );
	void OnViewCentre( wxMouseEvent& event );
	void OnPaintViewport( wxPaintEvent& event );
	void OnSizeViewport( wxSizeEvent& event );

	void OnTextFieldChange( wxCommandEvent& event );
	void OnChoiceFieldChange( wxCommandEvent& event );
	void OnEnterTextInfo( wxCommandEvent& event );
	void OnKillFocusTextInfo( wxFocusEvent& event );
	void ChangeTextInfo(wxControl* ctrl);
	void OnPinNameChanged( wxGridEvent& event );
	void OnPinNameRearrange( wxKeyEvent& event );
	void OnEnterPadCount( wxCommandEvent& event );
	void OnKillFocusPadCount( wxFocusEvent& event );
	void ChangePadCount(wxControl* ctrl);
	void OnEnterPadInfo( wxCommandEvent& event );
	void OnKillFocusPadInfo( wxFocusEvent& event );
	void ChangePadInfo(wxControl* ctrl);
	void OnEnterPitchInfo( wxCommandEvent& event );
	void OnKillFocusPitchInfo( wxFocusEvent& event );
	void ChangePitch(wxControl* ctrl);
	void OnEnterSpanInfo( wxCommandEvent& event );
	void OnKillFocusSpanInfo( wxFocusEvent& event );
	void ChangeSpan(wxControl* ctrl);
	void OnEnterBodyInfo( wxCommandEvent& event );
	void OnKillFocusBodyInfo( wxFocusEvent& event );
	void ChangeBodyInfo(wxControl* ctrl);
	void OnEnterLabelField( wxCommandEvent& event );
	void OnKillFocusLabelField( wxFocusEvent& event );
	void OnLabelShowHide( wxCommandEvent& event );
	void ChangeLabelInfo(wxControl* ctrl);
	void OnSavePart( wxCommandEvent& event );
	void OnRevertPart( wxCommandEvent& event );

private:
	bool GetSelectedLibrary(wxString* library, int* side);
	bool GetReportNameList(wxString* reportfile, wxString* library, wxArrayString* namelist);

	void DrawSymbols(wxGraphicsContext *gc, int midx, int midy, int transp[]);
	void DrawFootprints(wxGraphicsContext *gc, int midx, int midy, int transp[]);

	bool CheckTemplateVar(const wxString& varname);
	bool SetVarDefaults(RPNexpression *rpn, const wxString& templatename,
											const wxString& name, const wxString& description,
											const wxString& prefix=wxEmptyString, bool silent=false);
	bool SetVarsFromFields(RPNexpression *rpn, bool SymbolMode);
	bool RebuildTemplate();

	bool ValidateFilename(wxString* name);

	void DrawStrokeText(wxGraphicsContext *gc, float x, float y, const wxString& text);

	void ToggleMode(bool symbolmode);
	void ToggleDetailsPanel(bool onoff);
	void EnableButtons(int side);
	wxString GetSelection(wxListCtrl* list, wxChoice* choice = 0, wxString* library = 0, wxString* author = 0);
	void RemoveSelection(wxListCtrl* list);

	void CollectLibraries(const wxString &path, wxArrayString* list);
	void CollectAllLibraries(bool eraselists = true);

	void WarnNoRepository(wxChoice* choice);
	void HandleLibrarieSelect(wxChoice* choice, wxListCtrl* list);
	void CollectSymbols(const wxString &path, wxListCtrl* list);
	void CollectFootprints(const wxString &path, wxListCtrl* list);
	void LoadPart(int index, wxListCtrl* list, wxChoice* choice, int fp);
	void UpdateDetails(int fp);

	#define IDM_TIMER 900
	wxTimer* m_Timer;
	void OnTimer(wxTimerEvent& event);

private:
	wxArrayString PartData[2];	/* max. 2 footprints or symbols may be loaded at any time */
	FootprintInfo Footprint[2];		/* dimensions, pad information and others (footprints) */
	BodyInfo BodySize[2];		/* body size (footprints & symbols) */
	LabelInfo LabelData[2];		/* reference and value labels (footprints & symbols) */
	PinInfo* PinData[2];		/* pin names and directions (symbols) */
	int PinDataCount[2];
	bool FromRepository[2];		/* is the footprint/symbol from the repository? */
	bool FieldEdited;				/* was the field edited/changed? */
	bool PartEdited;				/* was the active footprint changed? */
	bool PinNamesEdited;			/* were any pin names edited? */

	double Scale;		/* scale used in the viewport */
	bool SymbolMode;	/* show schematic symbols instead of footprints */
	bool CompareMode;
	bool ShowLabels;
	long FontSizeLegend;
	long DimensionOffset;
	bool ShowFullPaths;
	bool CopyVRML;
	bool DontRebuildTemplate;

	long OffsetX, OffsetY;			/* offset from centre (when dragging) */
	long DragOrgX, DragOrgY;

	CXFFont VFont;		/* a vector/plotter font */
};

#endif // __libmngr_frame__
